#!/usr/bin/env just --justfile
# https://github.com/casey/just

build-jar :
	./gradlew jar



dependencies-tree :
	./gradlew dependencies --configuration testCompileOnly

extract-all-jars :
	rm -r -f jar-files
	./gradlew extractAllJars
	find jar-files -type f -name lint.jar -print -delete
	for i in jar-files/*; do mv "$i" "jar-files/$(basename "$i" | tr " ()" "_")_"; done

super-files-tree :
	tree -N -d super-files

super-files :
	rm -r -f super-files
	just dependencies-tree
	just extract-all-jars
	mv -f -v jar-files super-files
	just super-files-tree

jar-files-tree :
	tree -N -d jar-files

jar-files :
	just dependencies-tree
	just extract-all-jars
	for i in super-files/*; do rm -r -f "jar-files/$(basename "$i")"; done
	just jar-files-tree



reset-out :
	rm -r -f -v out

reset-out-android :
	mkdir -p out
	touch out/android.d.ts
	truncate -s0 out/android.d.ts

out-tree :
	tree -N out

out-each :
	just reset-out
	for i in jar-files/*; do just out-single "$(basename "$i")"; done
	cp -f -r -v -t ../out out/*.d.ts
	just out-tree

out-single input :
	just reset-out-android
	java -jar build/libs/dts-generator.jar \
		-skip-declarations \
		-input-generics ../libs/generics.txt \
		-super $ANDROID_HOME/platforms/android-29/android.jar \
		-super super-files \
		-super jar-files \
		-input "jar-files/{{input}}"
	mv -f -v out/android.d.ts "out/$(echo "{{input}}" | grep --only-matching '__.*__' | sed 's/__//g').d.ts"

out-multi output +inputs :
	just reset-out
	just reset-out-android
	java -jar build/libs/dts-generator.jar \
		-skip-declarations \
		-input-generics ../libs/generics.txt \
		-super $ANDROID_HOME/platforms/android-29/android.jar \
		-super super-files \
		-super jar-files \
		-input {{inputs}}
	mv -f -v out/android.d.ts "out/{{output}}.d.ts"
	just out-tree

out-all :
	just reset-out
	just reset-out-android
	java -jar build/libs/dts-generator.jar \
		-skip-declarations \
		-input-generics ../libs/generics.txt \
		-super $ANDROID_HOME/platforms/android-29/android.jar \
		-super super-files \
		-super jar-files \
		-input jar-files
	just out-tree

out-tsc :
	tsc --project .. --noEmit --listFilesOnly --diagnostics

export-out target :
	just out-tree
	cp -f -r -v -t "{{target}}" out/*.d.ts



watch-src :
	watchexec --watch src --restart -- 'clear; just build-jar; just out-all'



android-platform version :
	just reset-out
	just reset-out-android
	java -jar build/libs/dts-generator.jar \
		-input $ANDROID_HOME/platforms/android-{{version}}/android.jar
	mv -f -v out/android.d.ts ../out/android-platform-{{version}}.d.ts

androidx version :
	just reset-out
	just reset-out-android
	java -jar build/libs/dts-generator.jar \
		-skip-declarations \
		-input-generics ../libs/generics.txt \
		-super $ANDROID_HOME/platforms/android-{{version}}/android.jar \
		-input super-files
	mv -f -v out/android.d.ts ../out/androidx-{{version}}.d.ts





# mv -v out/android.d.ts "out/$(echo "{{input}}" | rg --only-matching '__(.*)__' --replace '$1').d.ts"
# mv -v out/android.d.ts "out/$(echo "{{input}}" | sed -E 's/__(.*)__/\1/').d.ts"
# mv -v out/android.d.ts "out/$(echo "{{input}}" | grep -E '__(.*)__').d.ts"
# mv -v out/android.d.ts "out/$(echo "{{input}}" | grep --only-matching '__.*__' | sed -e 's#^__##' -e 's#__$##').d.ts"
# mv -v out/android.d.ts "out/$(echo "{{input}}" | tr -cs "[:alpha:]" "_").d.ts"
# fd -uu --search-path=super-files --type=directory --max-depth=1 --exec rm -rf "jar-files/{/}"
# fd -uu --search-path=jar-files --type=file --glob "lint.jar" --exec rm -rfv

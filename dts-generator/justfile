#!/usr/bin/env just --justfile
# https://github.com/casey/just

set shell := ["bash", "-cu"]

_default :
	@echo && just --dump



dependencies :
	./gradlew dependencies --configuration testCompileOnly

extract-all-jars :
	just reset jar-files
	./gradlew extractAllJars
	find jar-files -type f -name lint.jar -print -delete
	for i in jar-files/*; do mv "$i" "jar-files/$(basename "$i" | tr " ()" "_")_"; done

super-files :
	just reset jar-files super-files
	just dependencies
	just extract-all-jars
	mv jar-files/* super-files
	tree -N -d super-files

jar-files :
	just reset jar-files
	just dependencies
	just extract-all-jars
	for i in super-files/*; do rm -r -f "jar-files/$(basename "$i")"; done
	tree -N -d jar-files

out-jar-files :
	just jar-files
	just out-each
	sed -i -e '/<clinit>/d' out/*.d.ts
	sed -i -e 's/<set-?>:/param0:/' out/*.d.ts
	sed -i -e 's/<any;/<any>;/' out/*.d.ts
	sed -i -e 's/$.*(/(/' out/*.d.ts
	sed -i -e 's/^export class module-info /declare class ModuleInfo /' -e 's/java.lang.Class<module-info>/java.lang.Class<ModuleInfo>/' out/*.d.ts
# lib="$(echo "{{output}}" | grep --only-matching '_.*_' | sed -e 's/_//g' -e 's/-/_/g')"; \
# [[ -n "$lib" ]] && echo \n"ðŸŒ• lib -> '$lib'" && sed -i -e 's/$$lib.*(/(/'



reset +folders="out jar-files super-files" :
	rm -r -f {{folders}}
	mkdir -p {{folders}}

reset-android :
	@mkdir -p out
	@touch out/android.d.ts
	@truncate -s0 out/android.d.ts

out-tree :
	ls --color=auto -1 out/*

out-each :
	just reset out
	for i in jar-files/*; do \
		output="$(basename "$i" | grep --only-matching '__.*__' | sed -e 's/__//g').d.ts"; \
		if [[ -e "../out/$output" ]]; then \
			cp -f -v "../out/$output" out; \
		else \
			just out-single "$(basename "$i")" "$output"; \
		fi; \
	done
	@rm -f out/android.d.ts
	just out-tree

out-single input output :
	just reset-android
	-java -jar build/libs/dts-generator.jar \
		-skip-declarations \
		-input-generics ../libs/generics.txt \
		-super $ANDROID_HOME/platforms/android-29/android.jar \
		-super super-files \
		-super jar-files \
		-input "jar-files/{{input}}"
	if [[ ! "0" == "$(du -b out/android.d.ts | awk '{print $1}')" ]]; then \
		mv out/android.d.ts "out/{{output}}"; \
		cp -f "out/{{output}}" ../out; \
	fi

out-multi output +inputs :
	just reset out
	just reset-android
	-java -jar build/libs/dts-generator.jar \
		-skip-declarations \
		-input-generics ../libs/generics.txt \
		-super $ANDROID_HOME/platforms/android-29/android.jar \
		-super super-files \
		-super jar-files \
		-input {{inputs}}
	mv out/android.d.ts "out/{{output}}.d.ts"
	just out-tree

out-all :
	just reset out
	just reset-android
	java -jar build/libs/dts-generator.jar \
		-skip-declarations \
		-input-generics ../libs/generics.txt \
		-super $ANDROID_HOME/platforms/android-29/android.jar \
		-super super-files \
		-super jar-files \
		-input jar-files
	just out-tree

export-out target :
	just out-tree
	rm -r -f -v "{{target}}"
	mkdir -p -v "{{target}}"
	cp -f -r -v -t "{{target}}" out/*.d.ts



build-jar :
	./gradlew jar

watch-src :
	watchexec --watch src --restart -- 'just on-watch-src'
on-watch-src :
	tput clear
	just build-jar
	just out-each
	tsc --noEmit



android-platform version="29" :
	just reset out
	just reset-android
	java -jar build/libs/dts-generator.jar \
		-input $ANDROID_HOME/platforms/android-{{version}}/android.jar
	node --require ts-node/register/transpile-only src/android-platform.ts
	rm -r -f out/android.d.ts out/android-declarations.d.ts ../out/android-platform-{{version}}
	mkdir -p ../out/android-platform-{{version}}
	mv out/* ../out/android-platform-{{version}}
	tree -N ../out/android-platform-{{version}}

androidx version="29" :
	just super-files
	rm -r -f jar-files/*
	mv super-files/* jar-files
	just reset out
	just out-each
	mv jar-files/* super-files
	rm -r -f ../out/androidx-{{version}}
	mkdir -p ../out/androidx-{{version}}
	mv out/* ../out/androidx-{{version}}
	tree -N ../out/androidx-{{version}}





# mv -v out/android.d.ts "out/$(echo "{{input}}" | rg --only-matching '__(.*)__' --replace '$1').d.ts"
# mv -v out/android.d.ts "out/$(echo "{{input}}" | sed -E 's/__(.*)__/\1/').d.ts"
# mv -v out/android.d.ts "out/$(echo "{{input}}" | grep -E '__(.*)__').d.ts"
# mv -v out/android.d.ts "out/$(echo "{{input}}" | grep --only-matching '__.*__' | sed -e 's#^__##' -e 's#__$##').d.ts"
# mv -v out/android.d.ts "out/$(echo "{{input}}" | tr -cs "[:alpha:]" "_").d.ts"
# fd -uu --search-path=super-files --type=directory --max-depth=1 --exec rm -rf "jar-files/{/}"
# fd -uu --search-path=jar-files --type=file --glob "lint.jar" --exec rm -rfv
